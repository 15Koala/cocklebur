// This autogenerated skeleton file illustrates how to build a server.
// You should copy it to another filename to avoid overwriting it.
#ifndef _COCKLEBUR_SERVER
#define _COCKLEBUR_SERVER

#include "gen-cpp/CockleburServ.h"
#include <thrift/protocol/TBinaryProtocol.h>
#include <thrift/server/TSimpleServer.h>
#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TBufferTransports.h>

using namespace ::apache::thrift;
using namespace ::apache::thrift::protocol;
using namespace ::apache::thrift::transport;
using namespace ::apache::thrift::server;
using boost::shared_ptr;

class HBMSG;
class Leader;
class CockleburServHandler : virtual public CockleburServIf {

private:
    
    Leader * d_leader;
    CockleburServHandler();
    CockleburServHandler(CockleburServHandler &);
public:

    explicit CockleburServHandler(Leader *);

    void getHostStat(HostStat& _return);

    void ping(std::string& _return, const std::string& message);
    void ping2(HBMSG & _return, const HBMSG& message);
};

void * startCockleburServer(void * p);

#endif
